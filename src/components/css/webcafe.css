@import url(./grid.css);
@import url(/style/reset.css);
@import url(/style/base.css);

/* 웹카페 반응형 레이아웃 */
.container {
  min-height: 100vh;
  display: flex;
  flex-flow: column nowrap;
  align-items: center;

  .header,
  .navigation,
  .footer {
    height: 100px;
    block-size: 100px;
    width: 100%; /* center 했을 때 item들도 축소된 걸 방지 */
  }

  .main {
    max-width: 90%;
    width: 100%; /* center 했을 때 item들도 축소된 걸 방지 */
    flex: 1 0 auto;
    gap: 24px;
  }
}

/* transition - 애니메이션(전이효과) */

/* 햄버거 버튼 */
.burger-button {
  background: red;
  border: 0;
  padding: 0;
  width: 24px;
  height: 24px;
  position: relative;

  span {
    width: 100%;
    height: 20%;
    position: absolute;
    background-color: #fff;
    left: 0;
    border-radius: 20px;
  }
  .burger-bar-top {
    top: 0;
  }
  .burger-bar-middle {
    top: 50%;
    translate: 0 -50%;
  }
  .burger-bar-bottom {
    top: 100%;
    translate: 0 -100%;
  }
}

/* 내비게이션 */
.menu {
  position: fixed;
  background-color: skyblue;
  top: 0;
  left: 0;
  width: 70%;
  height: 100vh;
  translate: -100% 0;
  /* 왜 translate로 주는지? => reflow */
  /* transition-property: translate, background;
  transition-duration: 2000ms, 2000ms;
  transition-delay: 0ms, 4000ms;
  transition-timing-function: ease-in-out; */
  /* transition: translate 2000ms 0ms ease-in-out, background 2000ms 2000ms ease-in-out; */
  /* delay는 무조건 옵션 */
  transition: all 0.2s;

  &.is-active {
    /* 이 클래스가 추가되는 순간 애니메이션 추가 */
    translate: 0 0; /* none 값도 가능 */
    background: purple;
  }
}
